// <auto-generated />
using System;
using Infotecs.Source.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace Infotecs.Migrations
{
    [DbContext(typeof(ExperimentContext))]
    partial class ExperimentContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder.HasAnnotation("ProductVersion", "8.0.1");

            modelBuilder.Entity("Infotecs.Source.Data.Models.CSVFile", b =>
                {
                    b.Property<string>("FileName")
                        .HasColumnType("TEXT");

                    b.Property<string>("AuthorName")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<byte[]>("Data")
                        .HasColumnType("BLOB");

                    b.Property<DateTime>("DateTimeOfUpload")
                        .HasColumnType("TEXT");

                    b.HasKey("FileName");

                    b.ToTable("Files");
                });

            modelBuilder.Entity("Infotecs.Source.Data.Models.Result", b =>
                {
                    b.Property<string>("FileName")
                        .HasColumnType("TEXT");

                    b.Property<int>("AverageDuration")
                        .HasColumnType("INTEGER");

                    b.Property<float>("AverageIndicatorValue")
                        .HasColumnType("REAL");

                    b.Property<int>("ExperimentsCount")
                        .HasColumnType("INTEGER");

                    b.Property<TimeOnly>("FirstExperimentStartTime")
                        .HasColumnType("TEXT");

                    b.Property<TimeOnly>("LastExperimentStartTime")
                        .HasColumnType("TEXT");

                    b.Property<int>("MaxDuration")
                        .HasColumnType("INTEGER");

                    b.Property<float>("MaxIndicatorValue")
                        .HasColumnType("REAL");

                    b.Property<float>("MedianIndicatorValue")
                        .HasColumnType("REAL");

                    b.Property<int>("MinDuration")
                        .HasColumnType("INTEGER");

                    b.Property<float>("MinIndicatorValue")
                        .HasColumnType("REAL");

                    b.HasKey("FileName");

                    b.ToTable("Results");
                });

            modelBuilder.Entity("Infotecs.Source.Data.Models.Value", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<int>("Duration")
                        .HasColumnType("INTEGER");

                    b.Property<string>("FileName")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<float>("IndicatorValue")
                        .HasColumnType("REAL");

                    b.Property<DateTime>("StartDateTime")
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.ToTable("Values");
                });
#pragma warning restore 612, 618
        }
    }
}
